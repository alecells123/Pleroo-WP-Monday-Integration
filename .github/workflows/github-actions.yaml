name: Create Release and Update Version

on:
  push:
    branches:
      - main
      - master

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 
        
      - name: Get latest release version
        id: get_version
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          CURRENT_VERSION=${LATEST_TAG#v}
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=$((VERSION_PARTS[2] + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "new_version=${NEW_VERSION}" >> "$GITHUB_OUTPUT"

      - name: Update version numbers
        run: |
          # Update version in main plugin file
          sed -i "s/Version:.*[0-9]\+\.[0-9]\+\.[0-9]\+/Version:           ${{ env.NEW_VERSION }}/" pleroo-wp-monday-integration.php
          sed -i "s/define( 'PLEROO_WP_MONDAY_INTEGRATION_VERSION', '[0-9]\+\.[0-9]\+\.[0-9]\+' )/define( 'PLEROO_WP_MONDAY_INTEGRATION_VERSION', '${{ env.NEW_VERSION }}' )/" pleroo-wp-monday-integration.php
          
          # Update version in class files
          find includes admin public -name "*.php" -type f -exec sed -i "s/@since.*[0-9]\+\.[0-9]\+\.[0-9]\+/@since      ${{ env.NEW_VERSION }}/g" {} \;
          find includes admin public -name "*.php" -type f -exec sed -i "s/\$this->version = '[0-9]\+\.[0-9]\+\.[0-9]\+';/\$this->version = '${{ env.NEW_VERSION }}';/g" {} \;
          
          # Create update-info.json content
          echo '{
            "new_version": "${{ env.NEW_VERSION }}",
            "url": "https://github.com/alecells123/Pleroo-WP-Monday-Integration",
            "package": "https://github.com/alecells123/Pleroo-WP-Monday-Integration/releases/download/v${{ env.NEW_VERSION }}/pleroo-wp-monday-integration.zip",
            "version": "${{ env.NEW_VERSION }}"
          }' > update-info.json

      - name: Create ZIP excluding .distignore files
        run: |
          # Create a temporary directory with versioned name
          TEMP_DIR="Pleroo-WP-Monday-Integration-v${{ env.NEW_VERSION }}"
          mkdir -p "$TEMP_DIR"
          
          # Copy files to temp directory, respecting .distignore
          if [ -f .distignore ]; then
            EXCLUDE_ARGS=$(cat .distignore | sed 's/^/--exclude="/g' | sed 's/$/"/' | tr '\n' ' ')
            rsync -av . "$TEMP_DIR/" $EXCLUDE_ARGS --exclude=".git" --exclude=".github" --exclude="releases" --exclude="$TEMP_DIR"
          else
            rsync -av . "$TEMP_DIR/" --exclude=".git" --exclude=".github" --exclude="releases" --exclude="$TEMP_DIR"
          fi
          
          # Create zip from the temp directory
          zip -r "pleroo-wp-monday-integration.zip" "$TEMP_DIR"
          
          # Debug: List files in directory
          ls -la
          # Debug: Check ZIP contents
          unzip -l "pleroo-wp-monday-integration.zip"
          
          # Cleanup
          rm -rf "$TEMP_DIR"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: pleroo-wp-monday-integration.zip
          tag_name: v${{ env.NEW_VERSION }}
          name: Release v${{ env.NEW_VERSION }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_unmatched_files: true

      - name: Commit update-info.json changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add update-info.json
          git commit -m "Update version to v${{ env.NEW_VERSION }}"
          git push
